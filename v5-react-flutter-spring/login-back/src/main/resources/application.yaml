spring:
  thymeleaf:
    cache: false
  config:
    import: optional:file:local.env[.properties]
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 1234
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
  h2:
    console:
      enabled: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email, openid
            redirect-uri: ${GOOGLE_REDIRECT_URL}
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-name: Naver
            authorization-grant-type: authorization_code
            scope: profile, email
            redirect-uri: ${NAVER_REDIRECT_URL}
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-name: Kakao
            # Below property is essential in case of kakao login
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${KAKAO_REDIRECT_URL}
            scope: profile_nickname

        provider:
          # There is no need to add google provider, Spring security configure the uri automatically.
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
logging:
  level:
    org.springframework.security: DEBUG